# Raspberry Pi Set up for IC231 Remote Access Labs
Srikanth Sugavanam, Assistant Professor, School of Computing and Electrical Engineering, IIT Mandi
18th January 2022


Abstract

The following is a document that provides information and links to resources on how to get your Raspberry Pi up and running for remote access lab sessions. The instructions provided here will allow you to set up the necessary files and Python libraries for access of the GPIO pins, and facilitating remote access of USB-based  devices. 

IMPORTANT - See the C for CAUTION section before you start. 


Start.

Equipment and packages used
	1. Raspberry Pi 4B+
	2. Raspbian OS version - Raspbian GNU/Linux 11 (Bullseye) 
	3. Python version - 3.9.2
	4. PyVisa version - 1.11.3
	5. Thonny IDE
	6. Pymeasure v0.9
	7. Pandas v1.3 (v1.4 available since January 22, 2022)
	8. Balena Etcher for burning the OS image
	9. PyUSB, PySerial (usually installed with PyVisa)
	10. gpiozero library
	11. RPi.GPIO library
	12. raspi-blinka - CircuitPython libraries for interfacing with ADS111s
	13. adafruit_bus_device
	14. adafruit_circuitpython_ads1x15
	15. VNC Server (pre-installed on RPi)
	16. VNC Viewer (on your remote computer)
	
A. Prepping the Raspi
=====================
Burn the Raspberry Pi OS image onto an SD disk using the Balena Etcher software. Once this is done, follow the usual approach for setting up your Raspberry Pi. Enable SPI, I2C, VNC using the raspi-config command in the terminal, or via the RPi button>Preferences>Raspberry Pi Configuration option. 

Python and Thonny come pre-installed, so this is not required. 

B. Installing the Python libraries
==================================
There is a sequence to installing some of the libraries owing to the dependencies. Normally, these install automatically, however I ran into a bug when installing pymeasure. So the recommended sequence is as follows.

1. gpiozero
2. RPi.GPIO
3. PyUSB, PySerial
4. PyVisa
5. Pandas
6. Pymeasure (ONLY AFTER PANDAS)
7. raspi-blinka 
8. adafruit_bus_device (AFTER raspi-blinka)
9. adafruit_circuitpython_ads1x15 (AFTER raspi-blinka)

The usual terminal commands usually work for installation of the libraries above. For me the pandas and rasp-blinka install were glitchy. The following worked for me - 

	pip3 install adafruit-blinka
	sudo apt-get install python3-pandas

NOTE - I used the pymeasures library as it has pre-written routines for communicating with the Keysight DSOX1102G. If you run into errors where it says something along the lines of '... no such file exists...' it is most likely because of a uppercase/lowercase error in the library definition. You can either do a git pull, or as a quick fix (not recommended, but works) - physically go in and change the case of the character. Be careful not to change any other code! :)

C for CAUTION - Python 2 vs. Python 3, Raspberry 32 bit vs. 64 bit
===============================

The Adafruit libraries are used here for working with the ADS1115s. However, there is a catch - the Blinka library support is only limited to Python3 currently. Furthermore, CircuitPython supports only the 32 bit version of the Raspberry Pi OS. See here for more information - https://learn.adafruit.com/circuitpython-on-raspberrypi-linux/installing-circuitpython-on-raspberry-pi 

Use the terminal command <uname -m> - if the output is armv7l, then your OS is 32 bit and you will be able to use the CircuitPython and Blinka libraries. 

